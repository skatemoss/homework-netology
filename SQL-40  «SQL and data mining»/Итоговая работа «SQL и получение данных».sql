-- ======== ОПИСАНИЕ ЗАДАНИЯ ========
/*
Для выполнения работы Вам необходимо:

Перейти по ссылке и ознакомиться с описанием базы данных: https://edu.postgrespro.ru/bookings.pdf
Подключиться к базе данных avia по одному из следующих вариантов:
	облачное подключение 
	локальное подключение
Оформить работу согласно “Приложения №1” в формате *.pdf или *.doc
Создать запросы, позволяющие ответить на вопросы из “Приложения №2”, решения должны быть приложены в формате *.sql одним файлом.
Отправить работу на проверку

Приложение №1 "Итоговая работа"

В работе использовался _______ тип подключения. 
(если база была развернута из *.sql или *.backup файла, необходимо приложить скриншот успешного импорта или восстановления)
Скриншот ER-диаграммы из DBeaver`a согласно Вашего подключения.
Краткое описание БД - из каких таблиц и представлений состоит.
Развернутый анализ БД - описание таблиц, логики, связей и бизнес области. Бизнес задачи, которые можно решить, используя БД.
Список SQL запросов из приложения №2 с описанием логики их выполнения.

Приложение №2 "Список запросов"

1. В каких городах больше одного аэропорта?
2. В каких аэропортах есть рейсы, выполняемые самолетом с максимальной дальностью перелета?
3. Вывести 10 рейсов с максимальным временем задержки вылета
4. Были ли брони, по которым не были получены посадочные талоны?
5. Найдите количество свободных мест для каждого рейса, их % отношение к общему количеству мест в самолете.
Добавьте столбец с накопительным итогом - суммарное накопление количества вывезенных пассажиров из каждого аэропорта на каждый день. Т.е. в этом столбце должна отражаться накопительная сумма - сколько человек уже вылетело из данного аэропорта на этом или более ранних рейсах в течении дня.
6. Найдите процентное соотношение перелетов по типам самолетов от общего количества.
7. Были ли города, в которые можно  добраться бизнес - классом дешевле, чем эконом-классом в рамках перелета?
8. Между какими городами нет прямых рейсов?
 */

-- ======== СПИСОК ЗАПРОСОВ ========
-- 1) В каких городах больше одного аэропорта?

-- Группируем таблицу по городу и выводим через фильтр со счетчиком только те города, у которых количество airport_code > 1.
select city "Город"
from airports
group by city
having count(*) > 1

-- 2) В каких аэропортах есть рейсы, выполняемые самолетом с максимальной дальностью перелета?

-- С помощью сортировки и ограничения вывода, в подзапросе получаем код самолета с максимальной дальностью перелета из таблицы aircrafts.
-- В основном запросе, после джоина с таблицей рейсов, указываем условие соответствия самолета.
-- C помощью Distinct убираем дубли аэропортов.
select distinct
	airport_name
from airports a
join flights f on a.airport_code = f.departure_airport
where f.aircraft_code = (
	select aircraft_code
	from aircrafts
	order by "range" desc
	limit 1)
	
-- 3) Вывести 10 рейсов с максимальным временем задержки вылета
	
-- Выбираем только те рейсы, которые действительно вылетели. (actual_departure не пустой)
-- Сортируем по убыванию.
-- Ограничиваем вывод 10-ю строками.
select 
	flight_id,
	scheduled_departure,
	actual_departure,
	actual_departure - scheduled_departure "Задержка вылета"
from flights
where actual_departure is not null
order by "Задержка вылета" desc
limit 10

--4) Были ли брони, по которым не были получены посадочные талоны?

-- Присоединяем таблицу tickets, так как таблица броирований связана с таблицей посадочных талонов через номер бронирования.
-- Выбираем left join, так как в выборке нужно учитывать всё множество бронирований.
select
	case 
		when count(b.book_ref) > 0 then 'Есть'
		else 'Нет'
	end "Наличие бронирований без получения ПТ",
	count(b.book_ref) "Количество"
from bookings b
left join tickets t on t.book_ref = b.book_ref
left join boarding_passes bp on bp.ticket_no = t.ticket_no
where bp.boarding_no is null

-- 6) Найдите процентное соотношение перелетов по типам самолетов от общего количества

-- Считаем количество рейсов по каждой группе самолётов
-- Делим на общее количество рейсов и умножаем на 100
select
	aircraft_code,
	round(count(aircraft_code) * 100.0 / (select count(flight_id) from flights), 1) "% от общего кол-ва перелётов"
from flights
group by aircraft_code

-- 7) Были ли города, в которые можно добраться бизнес - классом дешевле, чем эконом-классом в рамках перелета?

-- В первом CTE выводим значения таблицы, в которой класс обслуживания "Economy"
-- Во втором CTE выводим значения таблицы, в которой класс обслуживания "Business"
-- Соединяем эти CTE и таблицу airports
-- Сравниваем значения стоимости бизнесс-класса и стоимости эконома построчно и отвечаем на вопрос.
-- Можно было бы дополнить
with cte as(
		select f.flight_id, arrival_airport, max(tf.amount) economy
		from flights f
		join ticket_flights tf on tf.flight_id = f.flight_id
		where tf.fare_conditions = 'Economy'
		group by f.flight_id
),
	cte2 as(
		select f.flight_id, f.arrival_airport, min(tf.amount) business
		from flights f
		join ticket_flights tf on tf.flight_id = f.flight_id
		where tf.fare_conditions = 'Business'
		group by f.flight_id
)
select  case
			when count(*) > 0
			then 'Да'
			else 'Нет'
		end "economy > business?"
from cte c
join cte2 c2 on c2.flight_id = c.flight_id
join airports a on a.airport_code = c.arrival_airport
where economy > business

-- 8) Между какими городами нет прямых рейсов?

-- Используя декартовое произведение находим связи город вылета - город прилета.
-- Из представления flights_v выбираем города и оператором except выводим результат.

create view cities as
select departure_city, arrival_city
from flights_v

select a.city city_a, a1.city city_b
from airports a
cross join airports a1
where a.city <> a1.city
	except
select *
from cities